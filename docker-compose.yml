services:
  postgres:
    image: postgres:15-alpine
    container_name: tastetrails-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      
    ports:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tastetrails-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: tastetrails-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
     - "6379"
    volumes:
      - redis_data:/data
    networks:
      - tastetrails-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend
  springboot-api:
    build:
      context: ./TasteTrails_backend
      dockerfile: Dockerfile
    container_name: springboot-api
    restart: unless-stopped
    expose:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE:-production}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tastetrails-network
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/backend/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Python FastAPI
  fastapi:
    build:
      context: ./TasteTrails_ai
      dockerfile: Dockerfile
    container_name: fastapi
    restart: unless-stopped
    expose:
      - "8001"
    environment:
      - QLOO_BASE_URL=https://hackathon.api.qloo.com
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASS=${REDIS_PASSWORD}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - QLOO_API_KEY=${QLOO_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - tastetrails-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  react-frontend:
    build:
      context: ./TasteTrails_frontend
      dockerfile: Dockerfile
      args:
        - VITE_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
        - VITE_TASTETRAILS_AI_URL=http://localhost/api/ai
        - VITE_TASTETRAILS_BACKEND_URL=http://localhost/api/backend
        - VITE_ENVIRONMENT=production
    container_name: react-frontend
    restart: unless-stopped
    expose:
      - "80"
    depends_on:
      - fastapi
      - springboot-api
    networks:
      - tastetrails-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - react-frontend
      - fastapi
      - springboot-api
    networks:
      - tastetrails-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  tastetrails-network:
    driver: bridge