events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # HTTP Server (SSL parts removed for local testing)
    server {
        listen 80;
        server_name localhost;

        # Security headers (SSL-related headers removed)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Client max body size (for file uploads)
        client_max_body_size 10M;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Backend API routes (Spring Boot) with rate limiting
        location /api/backend/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://springboot-api:8080/api/backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # AI API routes (FastAPI) with rate limiting
        location /api/ai/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://fastapi:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Static assets with long-term caching
        location /static/ {
            proxy_pass http://react-frontend:80;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Frontend (React app) - catch all other routes
        location / {
            proxy_pass http://react-frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle client-side routing for React
            proxy_intercept_errors on;
            error_page 404 = @fallback;
        }

        # Fallback for client-side routing
        location @fallback {
            proxy_pass http://react-frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS Server block commented out for local testing
    # Uncomment and configure when you're ready for SSL deployment
    #
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     # SSL Configuration
    #     ssl_certificate /etc/letsencrypt/live/tastetrails.edjitareanu.ro/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/tastetrails.edjitareanu.ro/privkey.pem;
    #
    #     # ... rest of SSL config
    # }
}